AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  Simple API Endpoint configured using Swagger specified inline and backed by a
  Lambda function
Resources:

  MyServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - "lambda.amazonaws.com"
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSLambdaExecute

  MyApi:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          version: '2017-05-03T04:28:50Z'
          title: HighTide
        basePath: /prod
        schemes:
          - https
        paths:
          /hightide:
            get:
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''http://tidebubble.craiggunson.com'''
                uri:
                  'Fn::Join':
                  - ''
                  - - 'arn:aws:apigateway:'
                    - Ref: 'AWS::Region'
                    - ':lambda:path/2015-03-31/functions/'
                    - 'Fn::GetAtt':
                        - hightide
                        - Arn
                    - /invocations
                    # change to    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ServerlessLambda.Arn}/invocations

                passthroughBehavior: when_no_match
                httpMethod: POST
                contentHandling: CONVERT_TO_TEXT
                type: aws
            options:
              consumes:
                - application/json
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Headers:
                      type: string
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
                      method.response.header.Access-Control-Allow-Headers: >-
                        'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
                      method.response.header.Access-Control-Allow-Origin: '''http://tidebubble.com'''
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                passthroughBehavior: when_no_match
                type: mock
        definitions:
          Empty:
            type: object
            title: Empty Schema


  hightide:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda-hightide.handler
      Runtime: nodejs6.10
      CodeUri: .
      Description: ''
      Policies: AmazonDynamoDBFullAccess
      MemorySize: 128
      Timeout: 9
      Role:
        Fn::Sub: ${MyServiceRole.Arn}

  LambdaInvokePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Ref: "hightide"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:ap-southeast-2:'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: MyApi
            - /*/GET/hightide
